{
    "openapi": "3.1.0",
    "info": {
        "title": "ChatFly Backend application",
        "version": "0.0.0"
    },
    "paths": {
        "/api/payment/latest-invoice": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Generate Ninepay Payment Url",
                "description": "Get the latest invoice for the current user.",
                "operationId": "generate_ninepay_payment_url_api_payment_latest_invoice_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/payment/ninepay/get-payment-url": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Generate Ninepay Payment Url",
                "description": "Get payment URL for NinePay.",
                "operationId": "generate_ninepay_payment_url_api_payment_ninepay_get_payment_url_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentCreateSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/payment/ninepay/callback": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Handle Ninepay Callback",
                "description": "Callback",
                "operationId": "handle_ninepay_callback_api_payment_ninepay_callback_get",
                "parameters": [
                    {
                        "name": "result",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "title": "Result"
                        }
                    },
                    {
                        "name": "checksum",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "title": "Checksum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payment/coupon/{coupon_code}": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Retrieve Coupon Info",
                "description": "Get coupon information.",
                "operationId": "retrieve_coupon_info_api_payment_coupon__coupon_code__get",
                "parameters": [
                    {
                        "name": "coupon_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Coupon Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create User Account",
                "description": "Create a new user account.",
                "operationId": "create_user_account_api_user_post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get All Users",
                "description": "Get information about all users.",
                "operationId": "get_all_users_api_user_get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete User By Id",
                "description": "Delete a user by their unique identifier.",
                "operationId": "delete_user_by_id_api_user_delete",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/resend-verify-email": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Resend Verification Email",
                "description": "Resend the verification email for account activation.",
                "operationId": "resend_verification_email_api_user_resend_verify_email_post",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/verify-email": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Verify User Email",
                "description": "Handle the verification of user email based on the provided token.",
                "operationId": "verify_user_email_api_user_verify_email_get",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/{user_id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User By Id",
                "description": "Get information about a user by user ID.",
                "operationId": "get_user_by_id_api_user__user_id__get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/forgot-password": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Initiate Password Reset",
                "description": "Initiate the process of resetting the user's password.",
                "operationId": "initiate_password_reset_api_user_forgot_password_put",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/forgot-password/verify": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Verify Password Reset Token",
                "description": "Verify the token for resetting the user's password.",
                "operationId": "verify_password_reset_token_api_user_forgot_password_verify_put",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/forgot-password/change-password": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Change Password After Reset",
                "description": "Change the user's password after a successful reset.",
                "operationId": "change_password_after_reset_api_user_forgot_password_change_password_put",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Token"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/password": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Change Password With Authentication",
                "description": "Change the user's password with authentication.",
                "operationId": "change_password_with_authentication_api_user_password_put",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/activate-account-user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Activate Account",
                "description": "Activate a user account.",
                "operationId": "activate_account_api_user_activate_account_user_post",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/billing-upgrade-request": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Request Billing Upgrade",
                "description": "Send a billing upgrade request via email to the admin.",
                "operationId": "request_billing_upgrade_api_user_billing_upgrade_request_post",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/auth/google/callback": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Google Login Callback",
                "description": "Callback for Google authentication.",
                "operationId": "google_login_callback_api_user_auth_google_callback_get",
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Access Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bot": {
            "post": {
                "tags": [
                    "Bot"
                ],
                "summary": "Create Bot Handler",
                "description": "Create a new bot.",
                "operationId": "create_bot_handler_api_bot_post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Bot"
                ],
                "summary": "Update Bot Handler",
                "description": "Update bot information.",
                "operationId": "update_bot_handler_api_bot_put",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotUpdateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bot"
                ],
                "summary": "Delete Bot Handler",
                "description": "Delete a bot.",
                "operationId": "delete_bot_handler_api_bot_delete",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Bot"
                ],
                "summary": "Get Created Bots",
                "description": "Get all created bots.",
                "operationId": "get_created_bots_api_bot_get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotResponseSchema"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bot/change-status": {
            "post": {
                "tags": [
                    "Bot"
                ],
                "summary": "Change Bot Activation Status",
                "description": "Change the status of a bot.",
                "operationId": "change_bot_activation_status_api_bot_change_status_post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    },
                    {
                        "name": "is_activate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean",
                            "title": "Is Activate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bot/rate-limit-per-day": {
            "get": {
                "tags": [
                    "Bot"
                ],
                "summary": "Get Bot Rate Limit Per Day",
                "description": "Get the rate limit per day for a bot.",
                "operationId": "get_bot_rate_limit_per_day_api_bot_rate_limit_per_day_get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Get Bot Rate Limit Per Day Api Bot Rate Limit Per Day Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Bot"
                ],
                "summary": "Change Bot Rate Limit Per Day",
                "description": "Change the rate limit per day for a bot.",
                "operationId": "change_bot_rate_limit_per_day_api_bot_rate_limit_per_day_post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the bot.",
                            "title": "Bot Id"
                        },
                        "description": "The unique identifier for the bot."
                    },
                    {
                        "name": "rate_limit_per_day",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The new rate limit per day for the bot.",
                            "title": "Rate Limit Per Day"
                        },
                        "description": "The new rate limit per day for the bot."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bot/share": {
            "get": {
                "tags": [
                    "Bot"
                ],
                "summary": "Share Bot",
                "description": "Generates an access token to share the bot.",
                "operationId": "share_bot_api_bot_share_get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Share Bot Api Bot Share Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bot/share/verify": {
            "post": {
                "tags": [
                    "Bot"
                ],
                "summary": "Verify Share Bot",
                "description": "Verifies the shared bot using the provided token.",
                "operationId": "verify_share_bot_api_bot_share_verify_post",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bot/information": {
            "get": {
                "tags": [
                    "Bot"
                ],
                "summary": "Get Bot Information By Bot Id",
                "description": "Retrieves information about a bot.",
                "operationId": "get_bot_information_by_bot_id_api_bot_information_get",
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bot/information/collect-customer-info": {
            "get": {
                "tags": [
                    "Bot"
                ],
                "summary": "Get Collect Customer Info",
                "description": "Retrieves information about customer data collection settings for a bot.",
                "operationId": "get_collect_customer_info_api_bot_information_collect_customer_info_get",
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bot/bot-template-config": {
            "post": {
                "tags": [
                    "Bot"
                ],
                "summary": "Create Bot Template Config",
                "description": "Creates a new bot template configuration.",
                "operationId": "create_bot_template_config_api_bot_bot_template_config_post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotTemplateConfigSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotTemplateConfigSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Bot"
                ],
                "summary": "Get Bot Template Config",
                "description": "Retrieves bot template configurations.",
                "operationId": "get_bot_template_config_api_bot_bot_template_config_get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotTemplateConfigResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Bot"
                ],
                "summary": "Update Bot Template Config",
                "description": "Updates bot template configuration.",
                "operationId": "update_bot_template_config_api_bot_bot_template_config_put",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_template_config_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Template Config Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotTemplateConfigSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotTemplateConfigSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bot"
                ],
                "summary": "Delete Bot Template Config",
                "description": "Deletes bot template configuration.",
                "operationId": "delete_bot_template_config_api_bot_bot_template_config_delete",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_template_config_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Template Config Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotTemplateConfigSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bot/bot-widget-setting": {
            "get": {
                "tags": [
                    "Bot"
                ],
                "summary": "Get Bot Widget Setting By Id",
                "description": "Get bot widget settings by bot id.",
                "operationId": "get_bot_widget_setting_by_id_api_bot_bot_widget_setting_get",
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotWidgetSettingSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Bot"
                ],
                "summary": "Create Bot Widget Setting",
                "description": "Create a new bot widget setting.",
                "operationId": "create_bot_widget_setting_api_bot_bot_widget_setting_post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotWidgetSettingSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotWidgetSettingSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Bot"
                ],
                "summary": "Update Bot Widget Setting",
                "description": "Update bot widget setting.",
                "operationId": "update_bot_widget_setting_api_bot_bot_widget_setting_put",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotWidgetSettingSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotWidgetSettingSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bot"
                ],
                "summary": "Delete Bot Widget Setting By Id",
                "description": "Delete bot widget setting by bot id.",
                "operationId": "delete_bot_widget_setting_by_id_api_bot_bot_widget_setting_delete",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotWidgetSettingSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bot/upload-bot-profile-picture": {
            "post": {
                "tags": [
                    "Bot"
                ],
                "summary": "Upload Bot Profile Picture",
                "description": "Upload bot profile picture to S3.",
                "operationId": "upload_bot_profile_picture_api_bot_upload_bot_profile_picture_post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_bot_profile_picture_api_bot_upload_bot_profile_picture_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/bot/domain-access": {
            "post": {
                "tags": [
                    "Bot"
                ],
                "summary": "Update Domain Access",
                "description": "Update domain access for the bot.",
                "operationId": "update_domain_access_api_bot_domain_access_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotDomainAccessSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/bot/evaluation": {
            "get": {
                "tags": [
                    "Bot"
                ],
                "summary": "Bot Evaluation Strong",
                "description": "Get strong evaluation information for the bot.",
                "operationId": "bot_evaluation_strong_api_bot_evaluation_get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotStrongSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/notion/auth-link": {
            "get": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Get Notion Auth Link",
                "description": "Return the authentication link for Notion.",
                "operationId": "get_notion_auth_link_api_scraping_notion_auth_link_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Get Notion Auth Link Api Scraping Notion Auth Link Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/notion/data": {
            "post": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Get And Import Notion Data",
                "description": "Get data from the access token retrieved from Notion authentication code.",
                "operationId": "get_and_import_notion_data_api_scraping_notion_data_post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    },
                    {
                        "name": "auth_code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Auth Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/url": {
            "post": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Scrape Url",
                "description": "Create a Knowledge Base and return a streaming response.",
                "operationId": "scrape_url_api_scraping_url_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeBaseCreateSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Scrape Url Api Scraping Url Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Delete Url Knowledge Base",
                "description": "Delete URLs from the knowledge base.",
                "operationId": "delete_url_knowledge_base_api_scraping_url_delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeBaseDeleteURLSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/scraping/url/{bot_id}": {
            "get": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Get All Url Knowledge Base",
                "description": "Get all URLs for a given bot by bot_id.",
                "operationId": "get_all_url_knowledge_base_api_scraping_url__bot_id__get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BotKnowledgeBaseUrlResponseSchema"
                                    },
                                    "title": "Response Get All Url Knowledge Base Api Scraping Url  Bot Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/url-nested/{bot_id}": {
            "get": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Get All Nested Url Knowledge Base",
                "description": "Get all nested URLs for a given bot by bot_id.",
                "operationId": "get_all_nested_url_knowledge_base_api_scraping_url_nested__bot_id__get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BotKnowledgeNestedUrlResponseSchema"
                                    },
                                    "title": "Response Get All Nested Url Knowledge Base Api Scraping Url Nested  Bot Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/file/{bot_id}": {
            "get": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Get All File Knowledge Base",
                "description": "Get all files for a given bot by bot_id.",
                "operationId": "get_all_file_knowledge_base_api_scraping_file__bot_id__get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BotKnowledgeBaseFileResponseSchema"
                                    },
                                    "title": "Response Get All File Knowledge Base Api Scraping File  Bot Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/include-resources/{bot_id}": {
            "get": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Get Include Resources",
                "description": "Get all included resources for a given bot by bot_id.",
                "operationId": "get_include_resources_api_scraping_include_resources__bot_id__get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotKnowledgeBaseIncludeResourcesResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/file": {
            "post": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Upload File",
                "description": "Upload a file and create a Knowledge Base.",
                "operationId": "upload_file_api_scraping_file_post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_file_api_scraping_file_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Delete File Knowledge Base",
                "description": "Delete files from the knowledge base.",
                "operationId": "delete_file_knowledge_base_api_scraping_file_delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeBaseDeleteFileSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/scraping/{bot_id}": {
            "get": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Get Status Of All Knowledge Bases",
                "description": "Get all knowledge bases.",
                "operationId": "get_status_of_all_knowledge_bases_api_scraping__bot_id__get",
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotKnowledgeBaseResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/question-answer/{bot_id}": {
            "post": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Add One Question Answer",
                "description": "Import a single question and answer for a bot.",
                "operationId": "add_one_question_answer_api_scraping_question_answer__bot_id__post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotQADocumentSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotQADocumentResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Get All Question Answer",
                "description": "Get all questions and answers for a bot.",
                "operationId": "get_all_question_answer_api_scraping_question_answer__bot_id__get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BotQADocumentResponseSchema"
                                    },
                                    "title": "Response Get All Question Answer Api Scraping Question Answer  Bot Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Delete Question Answer",
                "description": "Delete questions and answers for a bot.",
                "operationId": "delete_question_answer_api_scraping_question_answer__bot_id__delete",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeBaseDeleteQASchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/question-answer/{bot_id}/many": {
            "post": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Add Many Question Answer",
                "description": "Import multiple questions and answers for a bot.",
                "operationId": "add_many_question_answer_api_scraping_question_answer__bot_id__many_post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotManyQADocumentSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BotQADocumentResponseSchema"
                                    },
                                    "title": "Response Add Many Question Answer Api Scraping Question Answer  Bot Id  Many Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/text-document/{bot_id}": {
            "post": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Add One Text Document",
                "description": "Import a single text document for a bot.",
                "operationId": "add_one_text_document_api_scraping_text_document__bot_id__post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportTextDocumentSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BotTextDocumentResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Get All Text Document",
                "description": "Get all text documents for a bot.",
                "operationId": "get_all_text_document_api_scraping_text_document__bot_id__get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BotTextDocumentResponseSchema"
                                    },
                                    "title": "Response Get All Text Document Api Scraping Text Document  Bot Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Delete Text Document",
                "description": "Delete text documents for a bot.",
                "operationId": "delete_text_document_api_scraping_text_document__bot_id__delete",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeBaseDeleteTextSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/text-document/{bot_id}/many": {
            "post": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Add Many Text Document",
                "description": "Import multiple text documents for a bot.",
                "operationId": "add_many_text_document_api_scraping_text_document__bot_id__many_post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotManyTextDocumentSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BotTextDocumentResponseSchema"
                                    },
                                    "title": "Response Add Many Text Document Api Scraping Text Document  Bot Id  Many Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/session": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Generate Session",
                "description": "Generate new session uuid",
                "operationId": "generate_session_api_chat_session_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Generate Session Api Chat Session Post"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/get-streaming-response": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Streaming Response",
                "description": "Create a Knowledge Base and return a streaming response.",
                "operationId": "get_streaming_response_api_chat_get_streaming_response_post",
                "parameters": [
                    {
                        "name": "is_get_suggest_question",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Specify whether to get suggested questions.",
                            "title": "Is Get Suggest Question"
                        },
                        "description": "Specify whether to get suggested questions."
                    },
                    {
                        "name": "streaming",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Enable or disable streaming response.",
                            "default": true,
                            "title": "Streaming"
                        },
                        "description": "Enable or disable streaming response."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatHistoryCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Get Streaming Response Api Chat Get Streaming Response Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/get-streaming-response-with-chat-history": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Streaming Response With Chat History",
                "description": "Get streaming response with chat history.",
                "operationId": "get_streaming_response_with_chat_history_api_chat_get_streaming_response_with_chat_history_post",
                "parameters": [
                    {
                        "name": "is_get_suggest_question",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Specify whether to get suggested questions.",
                            "title": "Is Get Suggest Question"
                        },
                        "description": "Specify whether to get suggested questions."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StreamingWithChatHistorySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Get Streaming Response With Chat History Api Chat Get Streaming Response With Chat History Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/get-streaming-response-with-custom-settings": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Streaming Response With Custom Settings",
                "description": "Get streaming response with custom settings.",
                "operationId": "get_streaming_response_with_custom_settings_api_chat_get_streaming_response_with_custom_settings_post",
                "parameters": [
                    {
                        "name": "is_get_suggest_question",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Specify whether to get suggested questions.",
                            "title": "Is Get Suggest Question"
                        },
                        "description": "Specify whether to get suggested questions."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StreamingWithCustomSettingsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Get Streaming Response With Custom Settings Api Chat Get Streaming Response With Custom Settings Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/history": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Conversations History",
                "description": "Get Conversation history.",
                "operationId": "get_conversations_history_api_chat_history_get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start date for filtering chat history.",
                            "default": "2023-01-01T00:00:00",
                            "title": "Date From"
                        },
                        "description": "Start date for filtering chat history."
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "End date for filtering chat history.",
                            "default": "2030-12-31T00:00:00",
                            "title": "Date To"
                        },
                        "description": "End date for filtering chat history."
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Ordering of chat history. Format: '<field_name>.<direction>'.",
                            "default": "created_at.desc",
                            "title": "Order"
                        },
                        "description": "Ordering of chat history. Format: '<field_name>.<direction>'."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ChatHistoryResponseSchema"
                                    },
                                    "title": "Response Get Conversations History Api Chat History Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/session/{session_id}": {
            "delete": {
                "tags": [
                    "Chat"
                ],
                "summary": "Delete Session",
                "description": "Delete a session and its messages.",
                "operationId": "delete_session_api_chat_session__session_id__delete",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Identifier for the session to be deleted.",
                            "title": "Session Id"
                        },
                        "description": "Identifier for the session to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/get-normal-response": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Normal Response",
                "description": "Get a normal response.",
                "operationId": "get_normal_response_api_chat_get_normal_response_post",
                "parameters": [
                    {
                        "name": "message",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/messager-webhook": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Verify Messager Webhook",
                "description": "Verify a Messenger webhook.",
                "operationId": "verify_messager_webhook_api_chat_messager_webhook_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Send Message Webhook",
                "description": "Handle incoming messages from Messenger webhook.",
                "operationId": "send_message_webhook_api_chat_messager_webhook_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/history.pdf": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Convert History Export Pdf",
                "description": "Export Conversation History to PDF.",
                "operationId": "convert_history_export_pdf_api_chat_history_pdf_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatHistoryConversationInputSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/chat/{session_id}/history.pdf": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Session Chat History",
                "description": "Export Conversation History for a Session to PDF.",
                "operationId": "get_session_chat_history_api_chat__session_id__history_pdf_post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Session Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatHistoryConversationInputSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/num-message-left": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Num Message Left",
                "description": "Get the number of messages left for a bot.",
                "operationId": "get_num_message_left_api_chat_num_message_left_get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NumMessageLeftResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/submit-information": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Submit Information",
                "description": "Submit information to the system.",
                "operationId": "submit_information_api_chat_submit_information_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatHistorySubmitInformationSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/message-statistic": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Number Message Used",
                "description": "Get the number of messages used over a specified day interval.",
                "operationId": "get_number_message_used_api_chat_message_statistic_get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Bot Id"
                        }
                    },
                    {
                        "name": "day_interval",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "title": "Day Interval"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MessageStatisticResponse"
                                    },
                                    "title": "Response Get Number Message Used Api Chat Message Statistic Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/billing/upgrade": {
            "post": {
                "tags": [
                    "Billing"
                ],
                "summary": "Upgrade Billing Plan",
                "description": "Upgrade billing plan.",
                "operationId": "upgrade_billing_plan_api_billing_upgrade_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BillingUpgradeSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingCreateSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/billing/get-current-pricing-plan": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get Current Pricing Plan",
                "description": "Get current pricing plan.",
                "operationId": "get_current_pricing_plan_api_billing_get_current_pricing_plan_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PricingPlanSchema"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/billing/upgrade/vnpay-return": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Upgrade Billing Vnpay Return",
                "description": "Upgrade VNPAY billing with return.",
                "operationId": "upgrade_billing_vnpay_return_api_billing_upgrade_vnpay_return_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/billing/billing/upgrade/vnpay-sandbox": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Billing Upgrade Vnpay Sandbox",
                "description": "VNPay Billing Upgrade - Sandbox.",
                "operationId": "billing_upgrade_vnpay_sandbox_api_billing_billing_upgrade_vnpay_sandbox_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/slack/callback": {
            "get": {
                "tags": [
                    "Slack"
                ],
                "summary": "Slack Oauth Callback",
                "description": "Handle Slack OAuth callback for installing the app.",
                "operationId": "slack_oauth_callback_api_slack_callback_get",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/slack/customer-info": {
            "get": {
                "tags": [
                    "Slack"
                ],
                "summary": "Get Slack Customer Info",
                "description": "Get Slack customer information.",
                "operationId": "get_slack_customer_info_api_slack_customer_info_get",
                "parameters": [
                    {
                        "name": "app_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        }
                    },
                    {
                        "name": "team_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Team Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/slack/bot": {
            "post": {
                "tags": [
                    "Slack"
                ],
                "summary": "Add Slack Bot To Channel",
                "description": "Add Slack bot to a channel.",
                "operationId": "add_slack_bot_to_channel_api_slack_bot_post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackBotChannelSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Slack"
                ],
                "summary": "Get Slack Bot Channel Info",
                "description": "Get information about the Slack bot in a channel.",
                "operationId": "get_slack_bot_channel_info_api_slack_bot_get",
                "parameters": [
                    {
                        "name": "slack_team_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Slack Team Id"
                        }
                    },
                    {
                        "name": "slack_channel_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Slack Channel Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/integration/ms-team/link-conversation": {
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "Create Ms Team Link Conversation",
                "description": "Create Microsoft Teams link conversation with bot.",
                "operationId": "create_ms_team_link_conversation_api_integration_ms_team_link_conversation_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConversationSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConversationResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/integration/ms-team/linked-bot": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Get Ms Team Linked Bot",
                "description": "Get linked bot.",
                "operationId": "get_ms_team_linked_bot_api_integration_ms_team_linked_bot_get",
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Conversation Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/integration/ms-team/get-link-integration": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Get Ms Team Linked Bot",
                "description": "Get linked bot.",
                "operationId": "get_ms_team_linked_bot_api_integration_ms_team_get_link_integration_get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/integration/ms-team/linked-conversation": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Get Ms Team Linked Conversation",
                "description": "Get linked conversation.",
                "operationId": "get_ms_team_linked_conversation_api_integration_ms_team_linked_conversation_get",
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/integration/messager/{bot_id}": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Get Messager Page Informations",
                "description": "Get all added messager page information.",
                "operationId": "get_messager_page_informations_api_integration_messager__bot_id__get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IntegrationMessagerResponseSchema"
                                    },
                                    "title": "Response Get Messager Page Informations Api Integration Messager  Bot Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "Add Bot To Messager Page",
                "description": "Add a bot to a messager page.",
                "operationId": "add_bot_to_messager_page_api_integration_messager__bot_id__post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IntegrationMessagerCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/integration/telegram/channel/{channel_id}": {
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "Add Bot To Channel Id",
                "description": "Add a bot to a Telegram channel.",
                "operationId": "add_bot_to_channel_id_api_integration_telegram_channel__channel_id__post",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Channel Id"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Get Bot Id In Channel",
                "description": "Get bot ID by Telegram channel ID.",
                "operationId": "get_bot_id_in_channel_api_integration_telegram_channel__channel_id__get",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Channel Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/integration/telegram/token": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Get Telegram Access Token",
                "description": "Get Telegram access token.",
                "operationId": "get_telegram_access_token_api_integration_telegram_token_get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/organization": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Get Organizations",
                "description": "Get organizations.",
                "operationId": "get_organizations_api_organization_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationSchema"
                                    },
                                    "type": "array",
                                    "title": "Response Get Organizations Api Organization Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Create Organization",
                "description": "Create an organization.",
                "operationId": "create_organization_api_organization_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationCreateSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/organization/{organization_id}": {
            "put": {
                "tags": [
                    "Organization"
                ],
                "summary": "Update Organization",
                "description": "Update an organization.",
                "operationId": "update_organization_api_organization__organization_id__put",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationUpdateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Get Organization",
                "description": "Get organization.",
                "operationId": "get_organization_api_organization__organization_id__get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/organization/detail": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Get Organization Details",
                "description": "Get organization details.",
                "operationId": "get_organization_details_api_organization_detail_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationDetailSchema"
                                    },
                                    "type": "array",
                                    "title": "Response Get Organization Details Api Organization Detail Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api/organization/{organization_id}/member": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Create Organization Member",
                "description": "Create an organization member.",
                "operationId": "create_organization_member_api_organization__organization_id__member_post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationMemberCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationMemberSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Get Organization Member",
                "description": "Get organization members.",
                "operationId": "get_organization_member_api_organization__organization_id__member_get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationMemberSchema"
                                    },
                                    "title": "Response Get Organization Member Api Organization  Organization Id  Member Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login To Obtain Access Token",
                "description": "Login to obtain an access token.",
                "operationId": "login_to_obtain_access_token_token_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_login_to_obtain_access_token_token_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout And Remove Cookie",
                "description": "Logout and remove the Authorization cookie.",
                "operationId": "logout_and_remove_cookie_logout_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/docs/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout Docs And Remove Cookie",
                "description": "Logout from documentation and remove the Authorization cookie.",
                "operationId": "logout_docs_and_remove_cookie_docs_logout_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/docs/login": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login To Swagger Docs",
                "description": "Login to Swagger docs and obtain an access token.",
                "operationId": "login_to_swagger_docs_docs_login_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BasicAuth": []
                    }
                ]
            }
        },
        "/docs": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Documentation",
                "description": "Get Swagger documentation.",
                "operationId": "get_documentation_docs_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/user/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Current Information",
                "description": "Get information of the current user.",
                "operationId": "get_current_information_user_me_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSchema"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ]
            }
        },
        "/api-key": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Create Api Key",
                "description": "Create a new API key for the authenticated user.",
                "operationId": "create_api_key_api_key_post",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/APIKeyCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIKeySchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Created Api Keys",
                "description": "Get all API keys created by the authenticated user.",
                "operationId": "get_created_api_keys_api_key_get",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/APIKeySchema"
                                    },
                                    "title": "Response Get Created Api Keys Api Key Get"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update Api Key Name",
                "description": "Update the name of an existing API key.",
                "operationId": "update_api_key_name_api_key_put",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/APIKeyCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Delete Api Key By Id",
                "description": "Delete an API key by its ID.",
                "operationId": "delete_api_key_by_id_api_key_delete",
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "OAuth2PasswordBearerCookie": []
                    }
                ],
                "parameters": [
                    {
                        "name": "api_key_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The unique identifier of the API key to be deleted.",
                            "title": "Api Key Id"
                        },
                        "description": "The unique identifier of the API key to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "UI"
                ],
                "summary": "Read Root",
                "operationId": "read_root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logger": {
            "get": {
                "summary": "Get Logger",
                "operationId": "get_logger_logger_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "APIKeyCreateSchema": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id",
                        "description": "Optional unique identifier for the API Key.",
                        "omit_default": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the API Key."
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "APIKeyCreateSchema",
                "description": "API Key creation schema."
            },
            "APIKeySchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for the API Key."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the API Key."
                    },
                    "secret_key": {
                        "type": "string",
                        "title": "Secret Key",
                        "description": "Secret key associated with the API Key."
                    },
                    "last_used": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Used",
                        "description": "Timestamp indicating the last usage of the API Key."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "secret_key",
                    "last_used"
                ],
                "title": "APIKeySchema",
                "description": "API Key schema."
            },
            "BillingCreateSchema": {
                "properties": {
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active",
                        "description": "Flag indicating whether billing is active.",
                        "default": true,
                        "omit_default": true
                    },
                    "billing_type": {
                        "type": "integer",
                        "maximum": 5.0,
                        "minimum": 1.0,
                        "title": "Billing Type",
                        "description": "Type of billing (must be between 1 and 5).",
                        "default": 1
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At",
                        "description": "Optional expiration date for billing.",
                        "default": "2024-02-18T17:53:51.517928",
                        "omit_default": true
                    }
                },
                "type": "object",
                "title": "BillingCreateSchema",
                "description": "Billing Create schema."
            },
            "BillingUpgradeSchema": {
                "properties": {
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id",
                        "description": "Optional user identifier for billing upgrade.",
                        "omit_default": true
                    },
                    "billing_type": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 5.0,
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Billing Type",
                        "description": "Optional new billing type for upgrade.",
                        "default": 1
                    }
                },
                "type": "object",
                "title": "BillingUpgradeSchema",
                "description": "Billing update schema."
            },
            "Body_login_to_obtain_access_token_token_post": {
                "properties": {
                    "grant_type": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "password"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Grant Type"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope",
                        "default": ""
                    },
                    "client_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Id"
                    },
                    "client_secret": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Secret"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "password"
                ],
                "title": "Body_login_to_obtain_access_token_token_post"
            },
            "Body_upload_bot_profile_picture_api_bot_upload_bot_profile_picture_post": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File",
                        "description": "A file read as UploadFile"
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "file"
                ],
                "title": "Body_upload_bot_profile_picture_api_bot_upload_bot_profile_picture_post"
            },
            "Body_upload_file_api_scraping_file_post": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File",
                        "description": "A file read as UploadFile"
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "file"
                ],
                "title": "Body_upload_file_api_scraping_file_post"
            },
            "BotCreateSchema": {
                "properties": {
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id",
                        "description": "Optional user identifier associated with the bot.",
                        "omit_default": true
                    },
                    "bot_name": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "Bot Name",
                        "description": "Name of the bot."
                    },
                    "case_study": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "Case Study",
                        "description": "Case study of the bot."
                    },
                    "is_visibility": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Visibility",
                        "description": "Flag indicating bot visibility.",
                        "omit_default": true
                    },
                    "domain": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Domain",
                        "description": "List of domains associated with the bot.",
                        "omit_default": true
                    },
                    "collect_customer_info": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Collect Customer Info",
                        "description": "Dictionary for collecting customer information."
                    },
                    "rules": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rules",
                        "description": "List of rules associated with the bot."
                    },
                    "gpt_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gpt Model Name",
                        "description": "Name of the GPT model used by the bot.",
                        "omit_default": true
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "description": "Temperature setting for GPT model.",
                        "omit_default": true
                    },
                    "custom_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Prompt",
                        "description": "Custom prompt for GPT model.",
                        "omit_default": true
                    },
                    "bot_tone_type": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bot Tone Type",
                        "description": "Type of bot tone.",
                        "omit_default": true
                    },
                    "custom_error_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Error Message",
                        "description": "Custom error message for the bot.",
                        "omit_default": true
                    },
                    "is_enable_citation": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Enable Citation",
                        "description": "Flag indicating citation enablement.",
                        "default": false,
                        "omit_default": true
                    },
                    "is_activate": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Activate",
                        "description": "Flag indicating bot activation.",
                        "omit_default": true
                    },
                    "bot_language": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bot Language",
                        "description": "Language used by the bot.",
                        "omit_default": true
                    }
                },
                "type": "object",
                "required": [
                    "bot_name",
                    "case_study"
                ],
                "title": "BotCreateSchema",
                "description": "Schema for creating a bot."
            },
            "BotDomainAccessSchema": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the bot."
                    },
                    "domain": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Domain",
                        "description": "List of domains associated with the bot."
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "domain"
                ],
                "title": "BotDomainAccessSchema",
                "description": "Domain access schema."
            },
            "BotKnowledgeBaseFileResponseSchema": {
                "properties": {
                    "knowledge_base_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Knowledge Base Id",
                        "description": "Unique identifier for the associated knowledge base."
                    },
                    "filename": {
                        "type": "string",
                        "title": "Filename",
                        "description": "Name of the file in the knowledge base."
                    },
                    "num_token": {
                        "type": "integer",
                        "title": "Num Token",
                        "description": "Number of tokens in the file."
                    }
                },
                "type": "object",
                "required": [
                    "knowledge_base_id",
                    "filename",
                    "num_token"
                ],
                "title": "BotKnowledgeBaseFileResponseSchema",
                "description": "Schema for representing files in the knowledge base."
            },
            "BotKnowledgeBaseIncludeResources": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "Type of resource."
                    },
                    "number_of_resources": {
                        "type": "integer",
                        "title": "Number Of Resources",
                        "description": "Number of resources of the specified type."
                    },
                    "token": {
                        "type": "integer",
                        "title": "Token",
                        "description": "Total tokens for the specified type of resource."
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "number_of_resources",
                    "token"
                ],
                "title": "BotKnowledgeBaseIncludeResources",
                "description": "Schema for representing include resources in the knowledge base."
            },
            "BotKnowledgeBaseIncludeResourcesResponse": {
                "properties": {
                    "resource": {
                        "items": {
                            "$ref": "#/components/schemas/BotKnowledgeBaseIncludeResources"
                        },
                        "type": "array",
                        "title": "Resource",
                        "description": "List of included resources."
                    },
                    "total_token": {
                        "type": "integer",
                        "title": "Total Token",
                        "description": "Total tokens for all included resources."
                    }
                },
                "type": "object",
                "required": [
                    "resource",
                    "total_token"
                ],
                "title": "BotKnowledgeBaseIncludeResourcesResponse",
                "description": "Schema for representing the response of include resources in the knowledge base."
            },
            "BotKnowledgeBaseResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for the knowledge base entry."
                    },
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "full_page_url": {
                        "type": "string",
                        "title": "Full Page Url",
                        "description": "Full URL of the knowledge base page."
                    },
                    "training_status": {
                        "type": "string",
                        "title": "Training Status",
                        "description": "Training status of the knowledge base."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Timestamp indicating when the knowledge base entry was created."
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "Timestamp indicating when the knowledge base entry was last updated."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "bot_id",
                    "full_page_url",
                    "training_status",
                    "created_at",
                    "updated_at"
                ],
                "title": "BotKnowledgeBaseResponseSchema",
                "description": "Schema for representing bot knowledge base information in the response."
            },
            "BotKnowledgeBaseUrlResponseSchema": {
                "properties": {
                    "knowledge_base_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Knowledge Base Id",
                        "description": "Unique identifier for the associated knowledge base."
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "URL of the knowledge base."
                    },
                    "num_token": {
                        "type": "integer",
                        "title": "Num Token",
                        "description": "Number of tokens in the knowledge base URL."
                    }
                },
                "type": "object",
                "required": [
                    "knowledge_base_id",
                    "url",
                    "num_token"
                ],
                "title": "BotKnowledgeBaseUrlResponseSchema",
                "description": "Base knowledge get all URLs response schema."
            },
            "BotKnowledgeNestedUrlResponseSchema": {
                "properties": {
                    "knowledge_base_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Knowledge Base Id",
                        "description": "Unique identifier for the associated knowledge base."
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "URL of the knowledge base."
                    },
                    "num_token": {
                        "type": "integer",
                        "title": "Num Token",
                        "description": "Number of tokens in the knowledge base URL."
                    },
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/BotKnowledgeBaseUrlResponseSchema"
                        },
                        "type": "array",
                        "title": "Children",
                        "description": "List of nested URLs in the knowledge base."
                    }
                },
                "type": "object",
                "required": [
                    "knowledge_base_id",
                    "url",
                    "num_token"
                ],
                "title": "BotKnowledgeNestedUrlResponseSchema",
                "description": "Schema for representing nested URLs in the knowledge base."
            },
            "BotManyQADocumentSchema": {
                "properties": {
                    "question_answers": {
                        "items": {
                            "$ref": "#/components/schemas/QuestionAnswerInputSchema"
                        },
                        "type": "array",
                        "title": "Question Answers",
                        "description": "List of question and answer inputs."
                    }
                },
                "type": "object",
                "required": [
                    "question_answers"
                ],
                "title": "BotManyQADocumentSchema",
                "description": "Schema for representing multiple question and answer documents."
            },
            "BotManyTextDocumentSchema": {
                "properties": {
                    "text_documents": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Text Documents",
                        "description": "List of text documents."
                    }
                },
                "type": "object",
                "required": [
                    "text_documents"
                ],
                "title": "BotManyTextDocumentSchema",
                "description": "Schema for representing multiple text documents."
            },
            "BotQADocumentResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for the question and answer document."
                    },
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "question": {
                        "type": "string",
                        "title": "Question",
                        "description": "The question in the document."
                    },
                    "answer": {
                        "type": "string",
                        "title": "Answer",
                        "description": "The answer to the question."
                    },
                    "num_token": {
                        "type": "integer",
                        "title": "Num Token",
                        "description": "Number of tokens in the document."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Timestamp indicating when the document was created."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "bot_id",
                    "question",
                    "answer",
                    "num_token",
                    "created_at"
                ],
                "title": "BotQADocumentResponseSchema",
                "description": "Schema for representing the response of a bot's question and answer document."
            },
            "BotQADocumentSchema": {
                "properties": {
                    "question": {
                        "type": "string",
                        "title": "Question",
                        "description": "Question in the document."
                    },
                    "answer": {
                        "type": "string",
                        "title": "Answer",
                        "description": "Answer to the question."
                    }
                },
                "type": "object",
                "required": [
                    "question",
                    "answer"
                ],
                "title": "BotQADocumentSchema",
                "description": "Schema for representing a bot's question and answer document."
            },
            "BotResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for the bot."
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id",
                        "description": "Identifier of the user associated with the bot."
                    },
                    "bot_name": {
                        "type": "string",
                        "title": "Bot Name",
                        "description": "Name of the bot."
                    },
                    "case_study": {
                        "type": "string",
                        "title": "Case Study",
                        "description": "Description or case study associated with the bot."
                    },
                    "is_visibility": {
                        "type": "boolean",
                        "title": "Is Visibility",
                        "description": "Flag indicating whether the bot is visible.",
                        "default": true
                    },
                    "domain": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Domain",
                        "description": "List of domains associated with the bot.",
                        "default": []
                    },
                    "collect_customer_info": {
                        "type": "object",
                        "title": "Collect Customer Info",
                        "description": "Information collected from customers in JSON format.",
                        "default": {}
                    },
                    "is_activate": {
                        "type": "boolean",
                        "title": "Is Activate",
                        "description": "Flag indicating whether the bot is activated.",
                        "default": true
                    },
                    "is_deleted": {
                        "type": "boolean",
                        "title": "Is Deleted",
                        "description": "Flag indicating whether the bot is deleted.",
                        "default": false
                    },
                    "rate_limit_per_day": {
                        "type": "integer",
                        "title": "Rate Limit Per Day",
                        "description": "Maximum number of requests allowed per day.",
                        "default": 100
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "user_id",
                    "bot_name",
                    "case_study"
                ],
                "title": "BotResponseSchema",
                "description": "Bot response schema."
            },
            "BotSchema": {
                "properties": {
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id",
                        "description": "Optional user identifier associated with the bot.",
                        "omit_default": true
                    },
                    "bot_name": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "Bot Name",
                        "description": "Name of the bot."
                    },
                    "case_study": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "Case Study",
                        "description": "Case study of the bot."
                    },
                    "is_visibility": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Visibility",
                        "description": "Flag indicating bot visibility.",
                        "omit_default": true
                    },
                    "domain": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Domain",
                        "description": "List of domains associated with the bot.",
                        "omit_default": true
                    },
                    "collect_customer_info": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Collect Customer Info",
                        "description": "Dictionary for collecting customer information."
                    },
                    "rules": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rules",
                        "description": "List of rules associated with the bot."
                    },
                    "gpt_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gpt Model Name",
                        "description": "Name of the GPT model used by the bot.",
                        "omit_default": true
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "description": "Temperature setting for GPT model.",
                        "omit_default": true
                    },
                    "custom_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Prompt",
                        "description": "Custom prompt for GPT model.",
                        "omit_default": true
                    },
                    "bot_tone_type": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bot Tone Type",
                        "description": "Type of bot tone.",
                        "omit_default": true
                    },
                    "custom_error_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Error Message",
                        "description": "Custom error message for the bot.",
                        "omit_default": true
                    },
                    "is_enable_citation": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Enable Citation",
                        "description": "Flag indicating citation enablement.",
                        "default": false,
                        "omit_default": true
                    },
                    "is_activate": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Activate",
                        "description": "Flag indicating bot activation.",
                        "omit_default": true
                    },
                    "bot_language": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bot Language",
                        "description": "Language used by the bot.",
                        "omit_default": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for the bot."
                    },
                    "num_message_left": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Num Message Left",
                        "description": "Number of messages left for the bot.",
                        "omit_default": true
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At",
                        "description": "Timestamp indicating when the bot was created.",
                        "omit_default": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "default": "2024-01-19T17:53:51.643870"
                    }
                },
                "type": "object",
                "required": [
                    "bot_name",
                    "case_study",
                    "id"
                ],
                "title": "BotSchema",
                "description": "Bot Schema."
            },
            "BotStrongSchema": {
                "properties": {
                    "is_strong_token": {
                        "type": "boolean",
                        "title": "Is Strong Token",
                        "description": "Flag indicating whether the bot has strong tokenization.",
                        "default": true
                    },
                    "is_strong_question_answer": {
                        "type": "boolean",
                        "title": "Is Strong Question Answer",
                        "description": "Flag indicating whether the bot has strong question-answer capabilities.",
                        "default": true
                    },
                    "is_strong_rules": {
                        "type": "boolean",
                        "title": "Is Strong Rules",
                        "description": "Flag indicating whether the bot adheres to strong rules.",
                        "default": true
                    }
                },
                "type": "object",
                "title": "BotStrongSchema",
                "description": "Bot Score Schema."
            },
            "BotTemplateConfigResponseSchema": {
                "properties": {
                    "bot_template_config": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BotTemplateConfigSchema"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bot Template Config",
                        "description": "Optional list of bot template configurations.",
                        "omit_default": true
                    }
                },
                "type": "object",
                "title": "BotTemplateConfigResponseSchema",
                "description": "Schema for representing the response of bot template configuration."
            },
            "BotTemplateConfigSchema": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id",
                        "description": "Optional unique identifier for the bot template configuration.",
                        "omit_default": true
                    },
                    "case_study": {
                        "anyOf": [
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Case Study",
                        "description": "Optional list of case studies associated with the bot template.",
                        "omit_default": true
                    },
                    "prompt_template": {
                        "anyOf": [
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt Template",
                        "description": "Optional list of prompt templates for the bot template.",
                        "omit_default": true
                    },
                    "gpt_model_name": {
                        "anyOf": [
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gpt Model Name",
                        "description": "Optional list of GPT model names associated with the bot template.",
                        "omit_default": true
                    },
                    "visibility": {
                        "anyOf": [
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Visibility",
                        "description": "Optional list of visibility settings for the bot template.",
                        "omit_default": true
                    }
                },
                "type": "object",
                "title": "BotTemplateConfigSchema",
                "description": "Schema for representing bot template configuration."
            },
            "BotTextDocumentResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for the text document."
                    },
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "Content of the text document."
                    },
                    "num_token": {
                        "type": "integer",
                        "title": "Num Token",
                        "description": "Number of tokens in the document."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Timestamp indicating when the document was created."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "bot_id",
                    "content",
                    "num_token",
                    "created_at"
                ],
                "title": "BotTextDocumentResponseSchema",
                "description": "Schema for representing the response of a bot's text document."
            },
            "BotUpdateSchema": {
                "properties": {
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id",
                        "description": "Optional user identifier associated with the bot.",
                        "omit_default": true
                    },
                    "bot_name": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "Bot Name",
                        "description": "Name of the bot."
                    },
                    "case_study": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "Case Study",
                        "description": "Case study of the bot."
                    },
                    "is_visibility": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Visibility",
                        "description": "Flag indicating bot visibility.",
                        "omit_default": true
                    },
                    "domain": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Domain",
                        "description": "List of domains associated with the bot.",
                        "omit_default": true
                    },
                    "collect_customer_info": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Collect Customer Info",
                        "description": "Dictionary for collecting customer information."
                    },
                    "rules": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rules",
                        "description": "List of rules associated with the bot."
                    },
                    "gpt_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gpt Model Name",
                        "description": "Name of the GPT model used by the bot.",
                        "omit_default": true
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "description": "Temperature setting for GPT model.",
                        "omit_default": true
                    },
                    "custom_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Prompt",
                        "description": "Custom prompt for GPT model.",
                        "omit_default": true
                    },
                    "bot_tone_type": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bot Tone Type",
                        "description": "Type of bot tone.",
                        "omit_default": true
                    },
                    "custom_error_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Error Message",
                        "description": "Custom error message for the bot.",
                        "omit_default": true
                    },
                    "is_enable_citation": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Enable Citation",
                        "description": "Flag indicating citation enablement.",
                        "default": false,
                        "omit_default": true
                    },
                    "is_activate": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Activate",
                        "description": "Flag indicating bot activation.",
                        "omit_default": true
                    },
                    "bot_language": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bot Language",
                        "description": "Language used by the bot.",
                        "omit_default": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for the bot."
                    }
                },
                "type": "object",
                "required": [
                    "bot_name",
                    "case_study",
                    "id"
                ],
                "title": "BotUpdateSchema",
                "description": "Schema for updating a bot."
            },
            "BotWidgetSettingSchema": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the bot."
                    },
                    "domain": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Domain",
                        "description": "List of domains associated with the bot.",
                        "omit_default": true
                    },
                    "display_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 30
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Display Name",
                        "description": "Display name for the bot widget.",
                        "omit_default": true
                    },
                    "initial_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Initial Message",
                        "description": "Initial message for the bot widget.",
                        "omit_default": true
                    },
                    "suggest_messages": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Suggest Messages",
                        "description": "List of suggested messages for the bot widget.",
                        "omit_default": true
                    },
                    "theme": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Theme",
                        "description": "Theme for the bot widget.",
                        "omit_default": true
                    },
                    "bot_avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bot Avatar Url",
                        "description": "URL for the bot's avatar.",
                        "omit_default": true
                    },
                    "chat_icon_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chat Icon Url",
                        "description": "URL for the chat icon.",
                        "omit_default": true
                    },
                    "chat_bubble_button_color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chat Bubble Button Color",
                        "description": "Color for the chat bubble button.",
                        "omit_default": true
                    },
                    "chat_message_color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chat Message Color",
                        "description": "Color for the chat messages.",
                        "omit_default": true
                    },
                    "align_chat_bubble_button": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Align Chat Bubble Button",
                        "description": "Alignment for the chat bubble button.",
                        "omit_default": true
                    },
                    "auto_show_initial_message_after": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 30.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Auto Show Initial Message After",
                        "description": "Auto-show initial message duration.",
                        "omit_default": true
                    },
                    "is_circle_icon": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Circle Icon",
                        "description": "Flag for using a circle icon.",
                        "default": true,
                        "omit_default": true
                    },
                    "buble_text": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 30
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Buble Text",
                        "description": "Text for the chat bubble.",
                        "omit_default": true
                    },
                    "role": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 30
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Role",
                        "description": "Role associated with the bot.",
                        "omit_default": true
                    },
                    "is_disable_powered": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Disable Powered",
                        "description": "Flag for disabling the powered by message.",
                        "default": false,
                        "omit_default": true
                    }
                },
                "type": "object",
                "required": [
                    "bot_id"
                ],
                "title": "BotWidgetSettingSchema",
                "description": "Bot widget setting schema."
            },
            "ChatHistoryConversationInputSchema": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id",
                        "description": "Optional user identifier associated with the conversation.",
                        "omit_default": true
                    },
                    "order": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order",
                        "description": "Optional order for sorting the conversation.",
                        "default": "created_at.desc",
                        "omit_default": true
                    },
                    "date_from": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Date From",
                        "description": "Optional start date for filtering the conversation.",
                        "default": "2023-01-01T00:00:00",
                        "omit_default": true
                    },
                    "date_to": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Date To",
                        "description": "Optional end date for filtering the conversation.",
                        "default": "2030-12-31T00:00:00",
                        "omit_default": true
                    }
                },
                "type": "object",
                "required": [
                    "bot_id"
                ],
                "title": "ChatHistoryConversationInputSchema",
                "description": "Schema for conversation history input."
            },
            "ChatHistoryCreateSchema": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Content of the message."
                    },
                    "session_id": {
                        "type": "string",
                        "title": "Session Id",
                        "description": "Unique identifier for the session."
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "message",
                    "session_id"
                ],
                "title": "ChatHistoryCreateSchema",
                "description": "Schema for creating chat history message."
            },
            "ChatHistoryResponseSchema": {
                "properties": {
                    "bot_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bot Name",
                        "description": "Optional name of the associated bot.",
                        "omit_default": true
                    },
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id",
                        "description": "Unique identifier for the user."
                    },
                    "session_id": {
                        "type": "string",
                        "title": "Session Id",
                        "description": "Identifier for the conversation session."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Timestamp indicating when the conversation history was created."
                    },
                    "chat_history_response": {
                        "items": {
                            "$ref": "#/components/schemas/ChatHistorySchema"
                        },
                        "type": "array",
                        "title": "Chat History Response",
                        "description": "List of chat history entries."
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "user_id",
                    "session_id",
                    "created_at",
                    "chat_history_response"
                ],
                "title": "ChatHistoryResponseSchema",
                "description": "Schema for conversation history response."
            },
            "ChatHistorySchema": {
                "properties": {
                    "sender_type": {
                        "type": "string",
                        "title": "Sender Type",
                        "description": "Type of the message sender."
                    },
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "Content of the message."
                    }
                },
                "type": "object",
                "required": [
                    "sender_type",
                    "content"
                ],
                "title": "ChatHistorySchema",
                "description": "Schema for representing chat history response."
            },
            "ChatHistorySubmitInformationSchema": {
                "properties": {
                    "user_info": {
                        "type": "object",
                        "title": "User Info",
                        "description": "User information."
                    },
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "session_id": {
                        "type": "string",
                        "title": "Session Id",
                        "description": "Unique identifier for the session."
                    }
                },
                "type": "object",
                "required": [
                    "user_info",
                    "bot_id",
                    "session_id"
                ],
                "title": "ChatHistorySubmitInformationSchema",
                "description": "Schema for submitting chat history information."
            },
            "ConversationResponseSchema": {
                "properties": {
                    "bot_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bot Id",
                        "description": "Optional identifier for the associated bot.",
                        "omit_default": true
                    },
                    "conversation_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Conversation Id",
                        "description": "Optional identifier for the conversation.",
                        "omit_default": true
                    },
                    "id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id",
                        "description": "Optional identifier for the response.",
                        "omit_default": true
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At",
                        "description": "Optional timestamp indicating the creation time.",
                        "omit_default": true
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At",
                        "description": "Optional timestamp indicating the last update time.",
                        "omit_default": true
                    }
                },
                "type": "object",
                "title": "ConversationResponseSchema",
                "description": "Schema for representing a response to a conversation."
            },
            "ConversationSchema": {
                "properties": {
                    "bot_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bot Id",
                        "description": "Optional identifier for the associated bot.",
                        "omit_default": true
                    },
                    "conversation_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Conversation Id",
                        "description": "Optional identifier for the conversation.",
                        "omit_default": true
                    }
                },
                "type": "object",
                "title": "ConversationSchema",
                "description": "Schema for representing a conversation."
            },
            "CouponResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "code": {
                        "type": "string",
                        "title": "Code"
                    },
                    "discount_percentage": {
                        "type": "integer",
                        "title": "Discount Percentage"
                    },
                    "allowed_max_discount": {
                        "type": "integer",
                        "title": "Allowed Max Discount"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start Date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End Date"
                    },
                    "min_billing_value": {
                        "type": "integer",
                        "title": "Min Billing Value"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "code",
                    "discount_percentage",
                    "allowed_max_discount",
                    "start_date",
                    "end_date",
                    "min_billing_value",
                    "is_active"
                ],
                "title": "CouponResponseSchema",
                "description": "Schema for representing coupon information."
            },
            "CurrencyEnum": {
                "type": "string",
                "enum": [
                    "USD",
                    "EUR",
                    "GBP",
                    "CNY",
                    "JPY",
                    "VND"
                ],
                "title": "CurrencyEnum"
            },
            "HTTPValidationError": {
                "properties": {
                    "errors": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Errors"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HttpResponseSchema": {
                "properties": {
                    "message_code": {
                        "type": "integer",
                        "title": "Message Code",
                        "description": "Numeric code indicating the type of message or response."
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Human-readable message providing additional context about the response."
                    },
                    "data": {
                        "title": "Data",
                        "description": "Optional data accompanying the response."
                    }
                },
                "type": "object",
                "required": [
                    "message_code",
                    "message"
                ],
                "title": "HttpResponseSchema",
                "description": "HTTP Response Schema."
            },
            "ImportTextDocumentSchema": {
                "properties": {
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "Content of the text document."
                    }
                },
                "type": "object",
                "required": [
                    "content"
                ],
                "title": "ImportTextDocumentSchema",
                "description": "Schema for importing a text document."
            },
            "IntegrationMessagerCreateSchema": {
                "properties": {
                    "facebook_user_id": {
                        "type": "string",
                        "title": "Facebook User Id",
                        "description": "Facebook user identifier."
                    },
                    "access_token": {
                        "type": "string",
                        "title": "Access Token",
                        "description": "Access token for the integration."
                    }
                },
                "type": "object",
                "required": [
                    "facebook_user_id",
                    "access_token"
                ],
                "title": "IntegrationMessagerCreateSchema",
                "description": "Schema for creating an integration messenger."
            },
            "IntegrationMessagerResponseSchema": {
                "properties": {
                    "page_profile_picture": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Page Profile Picture",
                        "description": "Optional page profile picture URL.",
                        "omit_default": true
                    },
                    "page_name": {
                        "type": "string",
                        "title": "Page Name",
                        "description": "Page name."
                    },
                    "creator_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Creator Name",
                        "description": "Optional creator name.",
                        "omit_default": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Timestamp indicating the creation time."
                    }
                },
                "type": "object",
                "required": [
                    "page_name",
                    "created_at"
                ],
                "title": "IntegrationMessagerResponseSchema",
                "description": "Schema for representing a response to an integration messenger."
            },
            "KnowledgeBaseCreateSchema": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "scrape_url": {
                        "type": "string",
                        "title": "Scrape Url",
                        "description": "URL to scrape content for the knowledge base."
                    },
                    "scrape_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ScrapeTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Type of scraping for the knowledge base.",
                        "default": 2,
                        "omit_default": true
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "scrape_url"
                ],
                "title": "KnowledgeBaseCreateSchema",
                "description": "Schema for creating a knowledge base entry."
            },
            "KnowledgeBaseDeleteFileSchema": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "knowledge_base_ids": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "Knowledge Base Ids",
                        "description": "List of knowledge base IDs to be deleted."
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "knowledge_base_ids"
                ],
                "title": "KnowledgeBaseDeleteFileSchema",
                "description": "Schema for deleting files from the knowledge base."
            },
            "KnowledgeBaseDeleteQASchema": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "question_answer_ids": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "Question Answer Ids",
                        "description": "List of question and answer document IDs to be deleted."
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "question_answer_ids"
                ],
                "title": "KnowledgeBaseDeleteQASchema",
                "description": "Schema for deleting question and answer documents from the knowledge base."
            },
            "KnowledgeBaseDeleteTextSchema": {
                "properties": {
                    "text_document_ids": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "Text Document Ids",
                        "description": "List of text document IDs to be deleted."
                    }
                },
                "type": "object",
                "required": [
                    "text_document_ids"
                ],
                "title": "KnowledgeBaseDeleteTextSchema",
                "description": "Schema for deleting text documents from the knowledge base."
            },
            "KnowledgeBaseDeleteURLSchema": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "base64_urls": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Base64 Urls",
                        "description": "List of base64-encoded URLs to be deleted."
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "base64_urls"
                ],
                "title": "KnowledgeBaseDeleteURLSchema",
                "description": "Schema for deleting URLs from the knowledge base."
            },
            "LanguageEnum": {
                "type": "string",
                "enum": [
                    "en",
                    "vi"
                ],
                "title": "LanguageEnum"
            },
            "MessageCountResponse": {
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date",
                        "description": "Date of the message count."
                    },
                    "count": {
                        "type": "integer",
                        "title": "Count",
                        "description": "Number of messages on the specified date."
                    }
                },
                "type": "object",
                "required": [
                    "date",
                    "count"
                ],
                "title": "MessageCountResponse",
                "description": "Schema for response containing message count."
            },
            "MessageStatisticResponse": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "bot_name": {
                        "type": "string",
                        "title": "Bot Name",
                        "description": "Name of the associated bot."
                    },
                    "message_count": {
                        "items": {
                            "$ref": "#/components/schemas/MessageCountResponse"
                        },
                        "type": "array",
                        "title": "Message Count",
                        "description": "List of message counts."
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "bot_name",
                    "message_count"
                ],
                "title": "MessageStatisticResponse",
                "description": "Schema for response containing message statistics."
            },
            "NumMessageLeftResponse": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "num_message_left": {
                        "type": "integer",
                        "title": "Num Message Left",
                        "description": "Number of messages left."
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "num_message_left"
                ],
                "title": "NumMessageLeftResponse",
                "description": "Schema for response containing the number of messages left."
            },
            "OrganizationCreateSchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the organization."
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of the organization.",
                        "omit_default": true
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "OrganizationCreateSchema",
                "description": "Schema for creating an organization."
            },
            "OrganizationDetailSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "owner_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Owner Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Optional name of the organization.",
                        "default": "",
                        "omit_default": true
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Optional description of the organization.",
                        "default": "",
                        "omit_default": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "members": {
                        "items": {
                            "$ref": "#/components/schemas/OrganizationMemberSchema"
                        },
                        "type": "array",
                        "title": "Members",
                        "description": "List of members in the organization.",
                        "omit_default": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "OrganizationDetailSchema",
                "description": "Schema for representing detailed information about an organization."
            },
            "OrganizationMemberCreateSchema": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "Email address of the member."
                    },
                    "role": {
                        "type": "string",
                        "title": "Role",
                        "description": "Role of the member in the organization."
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "role"
                ],
                "title": "OrganizationMemberCreateSchema",
                "description": "Schema for creating a member in an organization."
            },
            "OrganizationMemberSchema": {
                "properties": {
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "Email address of the member."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the member."
                    },
                    "role": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Role",
                        "description": "Optional role of the member in the organization.",
                        "omit_default": true
                    }
                },
                "type": "object",
                "required": [
                    "organization_id",
                    "email",
                    "name"
                ],
                "title": "OrganizationMemberSchema",
                "description": "Schema for representing a member of an organization."
            },
            "OrganizationSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "owner_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Owner Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Optional name of the organization.",
                        "default": "",
                        "omit_default": true
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Optional description of the organization.",
                        "default": "",
                        "omit_default": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "OrganizationSchema",
                "description": "Schema for representing an organization."
            },
            "OrganizationUpdateSchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the organization.",
                        "omit_default": true
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of the organization.",
                        "omit_default": true
                    }
                },
                "type": "object",
                "title": "OrganizationUpdateSchema",
                "description": "Schema for updating an organization."
            },
            "PaymentCreateSchema": {
                "properties": {
                    "billing_type": {
                        "type": "integer",
                        "maximum": 5.0,
                        "minimum": 1.0,
                        "title": "Billing Type",
                        "description": "Billing type indicating the payment method or plan."
                    },
                    "subscription_time_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubscriptionTimeTypeEnum"
                            }
                        ],
                        "description": "Subscription time type enum indicating the duration of the subscription."
                    },
                    "lang": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "description": "Language enum indicating the preferred language for the subscription."
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "description": "Currency enum indicating the preferred currency for payment."
                    },
                    "coupon_code": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 6,
                                "minLength": 6
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Coupon Code",
                        "description": "Optional coupon code for applying discounts."
                    }
                },
                "type": "object",
                "required": [
                    "billing_type",
                    "subscription_time_type",
                    "lang",
                    "currency"
                ],
                "title": "PaymentCreateSchema",
                "description": "Schema for creating payment information."
            },
            "PricingPlanSchema": {
                "properties": {
                    "pricing_plan_name": {
                        "type": "string",
                        "title": "Pricing Plan Name"
                    },
                    "number_of_chatbots": {
                        "type": "integer",
                        "title": "Number Of Chatbots"
                    },
                    "characters_per_bot": {
                        "type": "integer",
                        "title": "Characters Per Bot"
                    },
                    "monthly_message_credits": {
                        "type": "integer",
                        "title": "Monthly Message Credits"
                    },
                    "is_api_access": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Api Access",
                        "description": "Flag for API access availability.",
                        "default": false,
                        "omit_default": true
                    },
                    "is_zapier_integration": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Zapier Integration",
                        "description": "Flag for Zapier integration availability.",
                        "default": false,
                        "omit_default": true
                    },
                    "is_slack_integration": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Slack Integration",
                        "description": "Flag for Slack integration availability.",
                        "default": false,
                        "omit_default": true
                    },
                    "is_whatsapp_integration": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Whatsapp Integration",
                        "description": "Flag for WhatsApp integration availability.",
                        "default": false,
                        "omit_default": true
                    },
                    "is_wordpress_integration": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Wordpress Integration",
                        "description": "Flag for WordPress integration availability.",
                        "default": false,
                        "omit_default": true
                    },
                    "is_microsoft_team_integration": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Microsoft Team Integration",
                        "description": "Flag for Microsoft Teams integration availability.",
                        "default": false,
                        "omit_default": true
                    },
                    "is_messenger_integration": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Messenger Integration",
                        "description": "Flag for Messenger integration availability.",
                        "default": false,
                        "omit_default": true
                    },
                    "is_gpt4_option": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Gpt4 Option",
                        "description": "Flag for GPT-4 option availability.",
                        "default": false,
                        "omit_default": true
                    },
                    "is_remove_chatfly_powered": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Remove Chatfly Powered",
                        "description": "Flag for removing Chatfly powered branding.",
                        "default": false,
                        "omit_default": true
                    },
                    "limit_message_of_user": {
                        "type": "integer",
                        "title": "Limit Message Of User",
                        "description": "Default limit for messages per user.",
                        "default": 100,
                        "omit_default": true
                    },
                    "current_number_message_of_user": {
                        "type": "integer",
                        "title": "Current Number Message Of User",
                        "description": "Current number of messages for the user.",
                        "default": 0,
                        "omit_default": true
                    }
                },
                "type": "object",
                "required": [
                    "pricing_plan_name",
                    "number_of_chatbots",
                    "characters_per_bot",
                    "monthly_message_credits"
                ],
                "title": "PricingPlanSchema",
                "description": "Pricing plans schema."
            },
            "QuestionAnswerInputSchema": {
                "properties": {
                    "question": {
                        "type": "string",
                        "title": "Question",
                        "description": "Question input."
                    },
                    "answer": {
                        "type": "string",
                        "title": "Answer",
                        "description": "Answer input."
                    }
                },
                "type": "object",
                "required": [
                    "question",
                    "answer"
                ],
                "title": "QuestionAnswerInputSchema",
                "description": "Schema for question and answer input."
            },
            "ScrapeTypeEnum": {
                "type": "integer",
                "enum": [
                    1,
                    2,
                    3
                ],
                "title": "ScrapeTypeEnum"
            },
            "SlackBotChannelSchema": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id"
                    },
                    "slack_channel_id": {
                        "type": "string",
                        "title": "Slack Channel Id"
                    },
                    "slack_team_id": {
                        "type": "string",
                        "title": "Slack Team Id"
                    },
                    "session_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Session Id",
                        "description": "Optional session ID associated with the bot channel.",
                        "omit_default": true
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "slack_channel_id",
                    "slack_team_id"
                ],
                "title": "SlackBotChannelSchema",
                "description": "Schema for representing Slack bot channel information."
            },
            "StreamingWithChatHistorySchema": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Content of the message."
                    },
                    "chat_history": {
                        "items": {
                            "$ref": "#/components/schemas/ChatHistorySchema"
                        },
                        "type": "array",
                        "title": "Chat History",
                        "description": "List of chat history entries."
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "message",
                    "chat_history"
                ],
                "title": "StreamingWithChatHistorySchema",
                "description": "Schema for streaming with chat history."
            },
            "StreamingWithCustomSettingsSchema": {
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Bot Id",
                        "description": "Unique identifier for the associated bot."
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Content of the message."
                    },
                    "chat_history": {
                        "items": {
                            "$ref": "#/components/schemas/ChatHistorySchema"
                        },
                        "type": "array",
                        "title": "Chat History",
                        "description": "List of chat history entries."
                    },
                    "custom_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Prompt",
                        "description": "Optional custom prompt for the GPT model.",
                        "default": "I want you to act as an assistant to a customer support agent by writing email responses. I will provide the customer inquiry or issue, and your task is to compose an appropriate, professional, and helpful response. You should not include additional instructions, questions, or explanations in your response. Only the main body of the email needs to be written.",
                        "omit_default": true
                    },
                    "gpt_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gpt Model Name",
                        "description": "Optional GPT model name.",
                        "default": "gpt-3.5-turbo-16k",
                        "omit_default": true
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "description": "Optional temperature setting.",
                        "default": 0,
                        "omit_default": true
                    },
                    "rules": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rules",
                        "description": "Optional list of rules."
                    },
                    "is_enable_citation": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Enable Citation",
                        "description": "Optional flag for enabling citation.",
                        "default": false,
                        "omit_default": true
                    }
                },
                "type": "object",
                "required": [
                    "bot_id",
                    "message",
                    "chat_history"
                ],
                "title": "StreamingWithCustomSettingsSchema",
                "description": "Schema for streaming with custom settings."
            },
            "SubscriptionTimeTypeEnum": {
                "type": "integer",
                "enum": [
                    1,
                    2
                ],
                "title": "SubscriptionTimeTypeEnum"
            },
            "TokenSchema": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "token_type": {
                        "type": "string",
                        "title": "Token Type"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "token_type"
                ],
                "title": "TokenSchema",
                "description": "Model for representing an access token."
            },
            "UserCreateSchema": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "Email address of the user."
                    },
                    "password": {
                        "type": "string",
                        "title": "Password",
                        "description": "Password for the user."
                    },
                    "full_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Full Name",
                        "description": "Full name of the user.",
                        "omit_default": true
                    },
                    "role": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Role",
                        "description": "Role of the user.",
                        "omit_default": true
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "UserCreateSchema",
                "description": "Schema for creating a user."
            },
            "UserSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At",
                        "omit_default": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "Timestamp of the last update.",
                        "default": "2024-01-19T17:53:51.443284"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "is_active"
                ],
                "title": "UserSchema",
                "description": "Schema for representing a user."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "OAuth2PasswordBearerCookie": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "scopes": {},
                        "tokenUrl": "/token"
                    }
                }
            },
            "BasicAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}